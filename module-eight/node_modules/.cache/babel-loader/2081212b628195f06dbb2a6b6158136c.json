{"ast":null,"code":"import _slicedToArray from\"/home/analimazn/Projetos/react-projects/codenation-react-dev/eight-module/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import UserProfile from'../../containers/UserProfile';import UserPosts from'../../containers/UserPosts';import Loading from'../../components/Loading';var ProfileRoute=function ProfileRoute(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useParams=useParams(),username=_useParams.username;useEffect(function(){fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users?search=\".concat(username)).then(function(res){return res.json();}).then(function(data){setUser(data[0]);});},[username]);useEffect(function(){if(user.id){fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/\".concat(user.id,\"/posts\")).then(function(res){return res.json();}).then(function(data){setPosts(data);setLoading(false);});}},[user]);return/*#__PURE__*/React.createElement(\"div\",{\"data-testid\":\"profile-route\"},/*#__PURE__*/React.createElement(UserProfile,{avatar:user.avatar,name:user.name,username:user.username}),loading?/*#__PURE__*/React.createElement(Loading,null):/*#__PURE__*/React.createElement(UserPosts,{posts:posts}));};export default ProfileRoute;","map":{"version":3,"sources":["/home/analimazn/Projetos/react-projects/codenation-react-dev/eight-module/src/routes/ProfileRoute/ProfileRoute.jsx"],"names":["React","useState","useEffect","useParams","UserProfile","UserPosts","Loading","ProfileRoute","user","setUser","posts","setPosts","loading","setLoading","username","fetch","then","res","json","data","id","avatar","name"],"mappings":"gMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,eACDN,QAAQ,CAAC,EAAD,CADP,wCAClBO,IADkB,eACZC,OADY,8BAECR,QAAQ,CAAC,EAAD,CAFT,yCAElBS,KAFkB,eAEXC,QAFW,8BAGKV,QAAQ,CAAC,IAAD,CAHb,yCAGlBW,OAHkB,eAGTC,UAHS,8BAINV,SAAS,EAJH,CAIlBW,QAJkB,YAIlBA,QAJkB,CAMzBZ,SAAS,CAAC,UAAM,CACda,KAAK,2EAAoED,QAApE,EAAL,CACGE,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CACZV,OAAO,CAACU,IAAI,CAAC,CAAD,CAAL,CAAP,CACD,CAJH,EAKD,CANQ,CAMN,CAACL,QAAD,CANM,CAAT,CAQAZ,SAAS,CAAC,UAAM,CACd,GAAIM,IAAI,CAACY,EAAT,CAAa,CACXL,KAAK,oEAA6DP,IAAI,CAACY,EAAlE,WAAL,CACGJ,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CACZR,QAAQ,CAACQ,IAAD,CAAR,CACAN,UAAU,CAAC,KAAD,CAAV,CACD,CALH,EAMD,CACF,CATQ,CASN,CAACL,IAAD,CATM,CAAT,CAWA,mBACE,2BAAK,cAAY,eAAjB,eACE,oBAAC,WAAD,EACE,MAAM,CAAEA,IAAI,CAACa,MADf,CAEE,IAAI,CAAEb,IAAI,CAACc,IAFb,CAGE,QAAQ,CAAEd,IAAI,CAACM,QAHjB,EADF,CAMGF,OAAO,cACJ,oBAAC,OAAD,MADI,cAEJ,oBAAC,SAAD,EAAW,KAAK,CAAEF,KAAlB,EARN,CADF,CAaD,CAtCD,CAwCA,cAAeH,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const [user, setUser] = useState({})\n  const [posts, setPosts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const {username} = useParams()\n\n  useEffect(() => {\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users?search=${username}`)\n      .then(res => res.json())\n      .then(data => {\n        setUser(data[0])\n      })\n  }, [username])\n\n  useEffect(() => {\n    if (user.id) {\n      fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${user.id}/posts`)\n        .then(res => res.json())\n        .then(data => {\n          setPosts(data)\n          setLoading(false)\n        })\n    }\n  }, [user])\n\n  return (\n    <div data-testid=\"profile-route\">\n      <UserProfile\n        avatar={user.avatar}\n        name={user.name}\n        username={user.username}\n      />\n      {loading\n        ? <Loading/>\n        : <UserPosts posts={posts}/>\n      }\n    </div>\n  );\n};\n\nexport default ProfileRoute;\n"]},"metadata":{},"sourceType":"module"}